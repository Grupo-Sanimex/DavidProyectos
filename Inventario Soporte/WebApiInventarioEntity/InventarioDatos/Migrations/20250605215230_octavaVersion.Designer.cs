// <auto-generated />
using System;
using InventarioDatos.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventarioDatos.Migrations
{
    [DbContext(typeof(DatosDbContext))]
    [Migration("20250605215230_octavaVersion")]
    partial class octavaVersion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("InventarioDatos.Models.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDepartamento"));

                    b.Property<string>("NombreDepartamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdDepartamento");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("InventarioDatos.Models.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<string>("Acceso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ApellidoM")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ApellidoP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UsuarioAD")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UsuarioWindows")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdUbicacion");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("InventarioDatos.Models.Equipo", b =>
                {
                    b.Property<int>("IdEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEquipo"));

                    b.Property<int?>("DepartamentoIdDepartamento")
                        .HasColumnType("int");

                    b.Property<string>("DiscoDuro")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ElaboroResponsiva")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EquipoEstatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Etiqueta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FechaUltimaCaptura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaUltimoMantto")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Procesador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ram")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Renovar")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("So")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdEquipo");

                    b.HasIndex("DepartamentoIdDepartamento");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdUbicacion");

                    b.ToTable("Equipo");
                });

            modelBuilder.Entity("InventarioDatos.Models.LicenciaOffice", b =>
                {
                    b.Property<int>("IdLicencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdLicencia"));

                    b.Property<string>("Cuenta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IdEquipo")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdLicencia");

                    b.HasIndex("IdEquipo");

                    b.ToTable("LicenciaOffice");
                });

            modelBuilder.Entity("InventarioDatos.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdRol");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("InventarioDatos.Models.Ubicacion", b =>
                {
                    b.Property<int>("IdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUbicacion"));

                    b.Property<string>("Centro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUbicacion");

                    b.ToTable("Ubicacion");
                });

            modelBuilder.Entity("InventarioDatos.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contracena")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmpleadoIdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UsuarioSesion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("EmpleadoIdEmpleado");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("InventarioDatos.Models.Empleado", b =>
                {
                    b.HasOne("InventarioDatos.Models.Departamento", "Departamento")
                        .WithMany("Empleados")
                        .HasForeignKey("IdDepartamento");

                    b.HasOne("InventarioDatos.Models.Ubicacion", "Ubicacion")
                        .WithMany("Empleados")
                        .HasForeignKey("IdUbicacion");

                    b.Navigation("Departamento");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("InventarioDatos.Models.Equipo", b =>
                {
                    b.HasOne("InventarioDatos.Models.Departamento", null)
                        .WithMany("Equipos")
                        .HasForeignKey("DepartamentoIdDepartamento");

                    b.HasOne("InventarioDatos.Models.Empleado", "Empleado")
                        .WithMany("Equipos")
                        .HasForeignKey("IdEmpleado");

                    b.HasOne("InventarioDatos.Models.Ubicacion", "Ubicacion")
                        .WithMany("Equipos")
                        .HasForeignKey("IdUbicacion");

                    b.Navigation("Empleado");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("InventarioDatos.Models.LicenciaOffice", b =>
                {
                    b.HasOne("InventarioDatos.Models.Equipo", "Equipo")
                        .WithMany("LicenciasOffice")
                        .HasForeignKey("IdEquipo");

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("InventarioDatos.Models.Usuario", b =>
                {
                    b.HasOne("InventarioDatos.Models.Empleado", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpleadoIdEmpleado");

                    b.HasOne("InventarioDatos.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("InventarioDatos.Models.Departamento", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("InventarioDatos.Models.Empleado", b =>
                {
                    b.Navigation("Equipos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("InventarioDatos.Models.Equipo", b =>
                {
                    b.Navigation("LicenciasOffice");
                });

            modelBuilder.Entity("InventarioDatos.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("InventarioDatos.Models.Ubicacion", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("Equipos");
                });
#pragma warning restore 612, 618
        }
    }
}
